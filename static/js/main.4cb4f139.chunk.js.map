{"version":3,"sources":["img/logo-light.png","logo.png","img/MergingFlow_1.png","img/MergingFlow_2.png","img/MergingFlow_3.png","utils/mathutils.js","components/module.component.js","components/br187.component.js","components/home.component.js","components/about.component.js","components/mergingflow.component.js","components/filename.component.js","utils/dateutils.js","components/features.component.js","components/references.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","clip","num","min","max","Module","props","logo","logostyle","float","logosrc","title","footer","this","className","style","src","renderBody","renderFooter","Component","BR187","onChangeTitle","bind","onChangeWidth","onChangeHeight","onChangeSeparation","handleTypeChange","onChangeSprinklered","state","resetState","name","e","preventDefault","calculateResults","type","width","height","separation","sprinklered","results","setState","target","value","checked","viewfac","X","Y","Math","PI","sqrt","atan","console","log","s_unprotected_area","r_unproected_area","viewfactor","toFixed","standard_unprotected_area","reduced_unprotected_area","onSubmit","autoComplete","placeholder","onChange","step","id","for","Home","href","About","MergingFlow","onChooseScenario","onChangeD","onChangeN","onChangeB","onChangeS_up","onChangeS_dn","onChangeW_se","onChangeX","scenarioDescriptors","1","2","3","ans","N","Number","D","B","S_up","S_dn","W_se","scenario","W_fe","event","scenario_1","scenario_2","scenario_3","first_method","Form","Group","Control","as","data-toggle","second_method","Label","calculate","Scenario1Form","Scenario2Form","Scenario3Form","Check","Input","label","getDiagram","alt","renderForm","FileNameConvention","onChangeDate","onChangeRevision","onChangeProject","onChangeStage","onChangeType","onChangeSecurityStatus","copyToClipboard","date","Date","revision","project","stage","securityStatus","filename","push","isodate","toISOString","split","substr","ofrify","join","copyText","createFilename","navigator","clipboard","writeText","then","alert","class","Features","features","implemented","intended","currentFeatures","forEach","item","index","intendedFeatures","References","App","modules","setModules","home","filenaming","br187","mergingflow","about","references","Navbar","variant","expand","sticky","Brand","Link","to","Toggle","aria-controls","Collapse","Nav","NavDropdown","Header","Item","Divider","routes","key","path","component","navbar","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4cb4f139.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-light.bbbae4b4.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.1cd923bd.png\";","module.exports = __webpack_public_path__ + \"static/media/MergingFlow_1.de981586.png\";","module.exports = __webpack_public_path__ + \"static/media/MergingFlow_2.686ef300.png\";","module.exports = __webpack_public_path__ + \"static/media/MergingFlow_3.d5891c9b.png\";","/**\r\n * @param {Number} num - The number to clip\r\n * @param {Number} min - The lower bound\r\n * @param {Number} max - The upper bound\r\n */\r\nexport default function clip(num,  min, max) {\r\n    if (num < min) {\r\n        return min;\r\n    }\r\n    else if(num > max){\r\n        return max;\r\n    }\r\n    else{\r\n        return num\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport logo from './../logo.png';\r\n\r\nexport default class Module extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.logo = logo;\r\n        this.logostyle = { \r\n            float: 'right'\r\n            } \r\n        this.logosrc = \"https://images.squarespace-cdn.com/content/v1/5a61f9539f8dceafed8c0aea/1538391094315-DMAJ4KSB8F3BB7YIYAD3/ke17ZwdGBToddI8pDm48kL1PC3gM8Rd6YHHCa9IyTboUqsxRUqqbr1mOJYKfIPR7LoDQ9mXPOjoJoqy81S2I8N_N4V1vUb5AoIIIbLZhVYy7Mythp_T-mtop-vrsUOmeInPi9iDjx9w8K4ZfjXt2dtz9D7BxKE7nEGUPCO0e-x3MMDjV9uhX05eW5661eHWZCjLISwBs8eEdxAxTptZAUg/OFR-LtGrey+copy%402x.png?format=500w\"\r\n        this.title=\"moduleTitle\"\r\n        this.footer=\"\"\r\n    }\r\n\r\n    renderBody(){\r\n        return (<div>This method should be overridden</div>);\r\n    }\r\n\r\n    renderFooter(){\r\n    return (<div>{this.footer}</div>)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card shadow\"> \r\n                    <div className=\"card-header\">\r\n                        <div className=\"d-flex\">\r\n                            <h1 className=\"module-header-title col-md justify-content-center\">\r\n                            {this.title}\r\n                            </h1>\r\n                            <div className=\"col-md ml-auto justify-content-right\" >\r\n                                <img\r\n                                    className=\"module-header-logo\"\r\n                                    style={this.logostyle}\r\n                                    src={this.logosrc}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        {this.renderBody()}\r\n                    </div>\r\n                    <div className=\"card-footer\">\r\n                        {this.renderFooter()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport clip from './../utils/mathutils'\r\nimport Module from './module.component';\r\n\r\n\r\nexport default class BR187 extends Module{\r\n  \r\n    constructor(props){\r\n      super(props);\r\n      this.onChangeTitle = this.onChangeTitle.bind(this)\r\n      this.onChangeWidth = this.onChangeWidth.bind(this)\r\n      this.onChangeHeight = this.onChangeHeight.bind(this)\r\n      this.onChangeSeparation = this.onChangeSeparation.bind(this)\r\n      this.handleTypeChange = this.handleTypeChange.bind(this)\r\n      this.onChangeSprinklered = this.onChangeSprinklered.bind(this)\r\n      this.state = this.resetState();\r\n      this.title = 'BR187'\r\n    };\r\n    toString(){\r\n      return this.name;\r\n    }\r\n    async onSubmit(e) {\r\n      e.preventDefault();\r\n      this.calculateResults()\r\n    }\r\n  \r\n    resetState(){\r\n      return {\r\n        title: '',\r\n        type: \"parallel\",\r\n        width: '',\r\n        height: '',\r\n        separation: '',\r\n        sprinklered: false,\r\n        results: false\r\n      }\r\n    }\r\n  \r\n    onChangeTitle(e) {\r\n      this.setState({\r\n        title: e.target.value\r\n      });\r\n    }\r\n  \r\n  \r\n    handleTypeChange(e) {\r\n      this.setState({\r\n        type: e.target.value\r\n      });\r\n    }\r\n  \r\n    onChangeHeight(e) {\r\n      this.setState({\r\n        height: e.target.value\r\n      });\r\n    }\r\n  \r\n    onChangeWidth(e) {\r\n      this.setState({\r\n        width: e.target.value\r\n      });\r\n    }\r\n  \r\n    onChangeSeparation(e) {\r\n      this.setState({\r\n        separation: e.target.value\r\n      });\r\n    }\r\n  \r\n    onChangeSprinklered(e) {\r\n      this.setState({\r\n        sprinklered: e.target.checked\r\n      })\r\n    }\r\n  \r\n    calculateResults() {\r\n      //calculation bit\r\n      let viewfac;\r\n      if (this.state.type === \"parallel\") {\r\n        if (this.state.separation === 0) {\r\n          viewfac = 1;\r\n        }\r\n        else {\r\n          let X = 0.5 * this.state.width / this.state.separation;\r\n          let Y = 0.5 * this.state.height / this.state.separation;\r\n          viewfac = ( 2 / Math.PI ) * ( (X / Math.sqrt(1 + X**2)) * Math.atan(Y / Math.sqrt(1 + X**2))  +  ( Y / Math.sqrt(1+Y**2) ) * Math.atan(X/Math.sqrt(1+Y**2)) );\r\n        }\r\n      }\r\n      else if(this.state.type === \"corner\") {\r\n        if (this.state.separation === 0) {\r\n          viewfac = 0.25;        \r\n        }\r\n        else {\r\n          let X = this.state.width / this.state.separation;\r\n          let Y = this.state.height / this.state.separation;\r\n          viewfac = 1 / (2 * Math.PI) * (X / Math.sqrt(1 + X**2)) * Math.atan(Y / Math.sqrt(1+X**2)  +  Y / Math.sqrt(1+Y**2) * Math.atan(X/Math.sqrt(1+Y**2)) )\r\n        }\r\n      }\r\n      else if (this.state.type === \"perpendicular\") {\r\n        if (this.state.separation === 0) {\r\n          viewfac = 0.25;\r\n        }\r\n        else {\r\n          let X = this.state.width / this.state.separation;\r\n          let Y = this.state.height / this.state.separation;\r\n          viewfac = 1 / (2 * Math.PI) * (  Math.atan(X) - (1/Math.sqrt(1+Y**2))*Math.atan(X/Math.sqrt(1+Y**2))  );\r\n        }\r\n      }\r\n      else {\r\n        console.log(\"Somehow we've landed on an unsupported calculation type (\"+ this.state.type +\")\")\r\n      }\r\n  \r\n      \r\n      let s_unprotected_area = 12.6 / (168 * viewfac) * 100\r\n      let r_unproected_area = 12.6 / (84 * viewfac) * 100\r\n  \r\n      if (this.state.sprinklered) {\r\n        s_unprotected_area *= 2;\r\n        r_unproected_area *= 2;\r\n      }\r\n      this.setState({\r\n        results: true,\r\n        viewfactor: viewfac.toFixed(3),\r\n        standard_unprotected_area: clip(s_unprotected_area.toFixed(1), 0, 100),\r\n        reduced_unprotected_area: clip(r_unproected_area.toFixed(1), 0, 100)\r\n        });\r\n      \r\n    }\r\n  \r\n    renderBody() {\r\n      return (\r\n        <div className=\"container\">\r\n            \r\n              <h3>Inputs</h3>\r\n              <form onSubmit={this.onSubmit.bind(this)} autoComplete=\"off\">\r\n              \r\n              <div className=\"form-row py-2\">\r\n                <label className=\"col-md-4\">Project Name</label>\r\n                <input \r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Project Title\"\r\n                  value={this.state.title}\r\n                  onChange={this.onChangeTitle}\r\n                />\r\n              </div>\r\n  \r\n              <div className=\"form-row py-2\">\r\n                <label>Radiator Geometry</label>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <input className=\"form-control col-md-6\" type=\"number\" step=\"0.001\" value={this.state.width} onChange={this.onChangeWidth} placeholder=\"Width\"></input>\r\n                \r\n                <input className=\"form-control col-md-6\" type=\"number\" step=\"0.001\" value={this.state.height} onChange={this.onChangeHeight} placeholder=\"Height\"></input>\r\n                \r\n              </div>\r\n  \r\n              <div className=\"form-row py-2\">\r\n                <label className=\"col-md-4\">Separation Distance<small><br/>(Usually twice the boundary distance)</small></label>\r\n                <input className=\"form-control\" type=\"number\" step=\"0.001\" placeholder=\"Separation\"value={this.state.separation} onChange={this.onChangeSeparation}></input>\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label>Calculation type</label>\r\n                <div className=\"form-check col-md-4\">\r\n                <input \r\n                  className=\"form-check-input\" \r\n                  type=\"radio\" \r\n                  value=\"parallel\"\r\n                  id=\"parallel\"\r\n                  checked={this.state.type === \"parallel\"}\r\n                  onChange={this.handleTypeChange}\r\n                />\r\n                <label className=\"form-check-label\" for=\"parallel\">Parallel</label>\r\n                </div>\r\n                <div className=\"form-check col-md-4\">\r\n                <input \r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  value=\"perpendicular\"\r\n                  id=\"perpendicular\"\r\n                  checked={this.state.type === \"perpendicular\"}\r\n                  onChange={this.handleTypeChange}\r\n                />\r\n                <label className=\"form-check-label\" for=\"perpendicular\">Perpendicular</label>\r\n                </div>\r\n                <div className=\"form-check\">\r\n                <input \r\n                  className=\"form-check-input\" \r\n                  type=\"radio\" \r\n                  value=\"corner\"\r\n                  id=\"corner\"\r\n                  checked={this.state.type === \"corner\"}\r\n                  onChange={this.handleTypeChange}\r\n                />\r\n                <label className=\"form-check-label\" for=\"corner\">Corner</label>\r\n                </div>\r\n              </div>\r\n  \r\n              <div className=\"form-row py-2\">\r\n                <div className=\"form-check\">                  \r\n                   <input className=\"form-check-input\"\r\n                   type=\"checkbox\"\r\n                   checked={this.state.sprinklered}\r\n                   id=\"sprinklered\"\r\n                   onChange={this.onChangeSprinklered}/>\r\n                   <label className=\"form-check-label\" for=\"sprinklered\">Sprinklered </label>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group py-3\">\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"calculate\"\r\n                  className=\"btn btn-primary form-control\"  \r\n                />\r\n              </div>\r\n            </form>\r\n            {this.state.results === true &&\r\n            <div className=\"results\">\r\n            <hr/>\r\n              <h3>Results</h3>\r\n                <h5>{this.state.title}</h5>\r\n                <h5>View Factor: {this.state.viewfactor}</h5>\r\n                <div className=\"row mx-auto\">\r\n                  <div className=\"col-md-6 mx-auto\">\r\n                    <div className=\"card\">                \r\n                      <div className=\"card-header\">\r\n                        <h4>Standard Fire Load</h4> <sm>(168 kW/sqm)</sm>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <h5>Maximum Unprotected Area: {this.state.standard_unprotected_area}%</h5>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6 mx-auto\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header\">\r\n                        <h4>Reduced Fire Load</h4> <sm>(84 kW/sqm)</sm>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <h5>Maximum Unprotected Area: {this.state.reduced_unprotected_area}%</h5>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              }\r\n              </div>\r\n    );\r\n  };\r\n  };","import React from 'react';\r\nimport Module from './module.component';\r\n\r\nexport default class Home extends Module{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.title = 'FSE Dashboard';\r\n        this.footer = (\r\n        <div className=\"p-0 mt-2\">\r\n            <h5>Contribute</h5>\r\n            <p>You know JS and happen to be a fire engineer looking for a programming opportunity? Why not support the project on <a href=\"https://github.com/Toddie40/fse-dashboard\">github</a>?</p> \r\n        </div>\r\n        )\r\n    }\r\n    toString(){\r\n        return this.name;\r\n    }\r\n    renderBody(){\r\n        return (\r\n            <div>\r\n                <h3>What is this place?</h3>\r\n                <hr/>\r\n                <p>This is the FSE Dashboard. It's the place to find all of our in-house calculation tools and little quality of life improvements for fire engineers writing strategies.</p>\r\n                <p>It's all ported over from FSETOOLS which is a python utility written by Ian Fu.</p>\r\n                <h3>Getting started</h3>\r\n                <hr/>\r\n                <p>Go ahead and click the modules dropdown in the navigation pane to see what's currently available to use as well as upcoming features.</p>\r\n                \r\n                <h3>Help! Your app's broken!</h3>\r\n                <hr/>\r\n                <p>If you want to report a bug or request a feature please feel free to email me at <a href=\"mailto:alex.todd@ofrconsultants.com\">alex.todd@ofrconsultants.com</a></p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Module from './module.component';\r\n\r\nexport default class About extends Module{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.title = 'About';\r\n        this.footer = \"Alex Todd | OFR Consultants\"\r\n    }\r\n    toString(){\r\n        return this.name;\r\n    }\r\n    renderBody(){\r\n        return (\r\n            <div className=\"container\">\r\n                <h5>Fire Safety Engineering Dashboard by OFR</h5>\r\n                <p>A collection of fire safety engineering tools for routine calculations to help with speeding up the process of writing fire strategies</p>  \r\n            </div>        \r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Module from './module.component';\r\nimport {Form} from 'react-bootstrap'\r\nimport scenario_1 from './../img/MergingFlow_1.png'\r\nimport scenario_2 from './../img/MergingFlow_2.png'\r\nimport scenario_3 from './../img/MergingFlow_3.png'\r\n\r\nexport default class MergingFlow extends Module{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.onChooseScenario = this.onChooseScenario.bind(this);\r\n        this.onChangeD = this.onChangeD.bind(this);\r\n        this.onChangeN = this.onChangeN.bind(this);\r\n        this.onChangeB = this.onChangeB.bind(this);\r\n        this.onChangeS_up = this.onChangeS_up.bind(this);\r\n        this.onChangeS_dn = this.onChangeS_dn.bind(this);\r\n        this.onChangeW_se = this.onChangeW_se.bind(this);\r\n        this.onChangeX = this.onChangeX.bind(this);\r\n        this.title = \"Merging Flow\";\r\n        this.scenarioDescriptors = {\r\n            1: \"Merging flow from stair with storey exit at final exit level\",\r\n            2: \"Merging flow from stair above and from stair below final exit level\",\r\n            3: \"Merging flow for stairs from above and from below combined with storey exit from final exit level\"\r\n        }\r\n        this.state = this.resetState();\r\n    }\r\n\r\n\r\n    calculate(){\r\n        let ans = 0;\r\n\r\n        //Cast all the entered values to numbers and store locally\r\n        let N = Number(this.state.N)\r\n        let D = Number(this.state.D)\r\n        let B = Number(this.state.B)\r\n        let X = Number(this.state.X)\r\n        let S_up = Number(this.state.S_up)\r\n        let S_dn = Number(this.state.S_dn)\r\n        let W_se = Number(this.state.W_se)\r\n\r\n\r\n        switch (this.state.scenario){    \r\n            case \"1\":\r\n                /* \r\n                Merging flow from stair with storey exit at final exit level\r\n                ------------------------------------------------------------\r\n                Where:\r\n                    N   : Number of people served by the final exit level storey exit\r\n                    D   : the lesser distance from the final exit level storey to the lowest riser from the upward portion of the stair, in meters (m);\r\n                    W_fe: the width of the final exit, in millimetres (mm)\r\n                    Sup : the stair width for the upward portion of the stair, in millimetres (mm)\r\n                    W_se: the width of the final exit level storey exit in millimetres (mm)\r\n                    X   : the minimum door width per person, in millimetres (mm) || Should be selected from dropdown box or function provided to calculate based on lookup table\r\n                */\r\n               \r\n               \r\n\r\n                if (N > 60 && D < 2){\r\n                    ans = S_up + W_se\r\n                }\r\n                else {\r\n                    ans = (N * X) + (0.75 * S_up);\r\n                }\r\n                break;\r\n            case \"2\":\r\n                /*\r\n                Merging flow from stair above and from stair below final exit level\r\n                -------------------------------------------------------------------\r\n                Where:\r\n                    B   : number of people served by the stair from below the final exit\r\n                    D   : the distance from the nose of te top going of the downward portion of the stair in megtres (m)\r\n                    W_fe: width of final exut in millimetres (mm)\r\n                    S_up: stair width for the upward portion of the stair in millimetres (mm)\r\n                    S_dn: stair width for the downward portion of the stair in millimetres (mm)\r\n                    X   : absoluted minimum door width per person in millimetres (mm)\r\n                */\r\n                \r\n                \r\n                if (B > 60 && D < 2){\r\n                    ans = S_up + S_dn;\r\n                }\r\n                else {\r\n                    ans = B * X + 0.75 * S_up;\r\n                }\r\n                break;\r\n            case \"3\":\r\n                /*\r\n                Merging flow for stairs from above and from below combined with storey exit from final exit level\r\n                -------------------------------------------------------------------------------------------------\r\n                Where:\r\n                    B   : the number of people served by the stair from below the final exit level;\r\n                    N   : the number of people served by the final exit level storey exit;\r\n                    D   : the lesser distance from the final exit level storey exit or the lowest riser from the upward portion of the stair, in metres (m);\r\n                    W_fe: the width of the final exit, in millimetres (mm);\r\n                    S_up: the stair width for the upward portion of the stair, in millimetres (mm);\r\n                    S_dn: the stair width for the downward portion of the stair, in millimetres (mm);\r\n                    W_se: the width of the final exit level storey exit, in millimetres (mm);\r\n                    X   : the minimum door width per person (see 16.6 and Clause 18), in millimetres (mm)\r\n                */\r\n                if (B + N > 60 && D < 2) {\r\n                   ans = S_up + S_dn + W_se;\r\n                }\r\n                else {\r\n                   ans = B * X + N * X + 0.75 * S_up;\r\n                }\r\n                break;\r\n        }\r\n        return ans;\r\n    }\r\n\r\n\r\n\r\n    resetState(){\r\n        return ({\r\n            scenario: \"1\",\r\n            N: '',\r\n            D: '',\r\n            B: '',\r\n            X: '',\r\n            W_se: '',\r\n            W_fe: '',\r\n            S_up: '',\r\n            S_dn: ''\r\n        });\r\n    }\r\n\r\n    //EVENT HANDLING\r\n\r\n    onChooseScenario(event){\r\n        this.setState({\r\n            scenario: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeN(event){\r\n        this.setState({\r\n            N: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeD(event){\r\n        this.setState({\r\n            D: event.target.value\r\n        })\r\n    }\r\n\r\n    onChangeB(event){\r\n        this.setState({\r\n            B: event.target.value\r\n        })\r\n    }\r\n\r\n    onChangeX(event){\r\n        this.setState({\r\n            X: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeS_up(event){\r\n        this.setState({\r\n            S_up: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeS_dn(event){\r\n        this.setState({\r\n            S_dn: event.target.value\r\n        });\r\n    \r\n    }\r\n    onChangeW_se(event){\r\n        this.setState({\r\n            W_se: event.target.value\r\n        });\r\n    }\r\n\r\n    //END EVENT HANDLING\r\n\r\n\r\n\r\n\r\n\r\n\r\n    getDiagram(){\r\n        switch (this.state.scenario){\r\n            case \"1\":\r\n                return scenario_1;\r\n            case \"2\":\r\n                return scenario_2;\r\n            case \"3\":\r\n                return scenario_3;\r\n        }\r\n    }\r\n\r\n    Scenario1Form(){\r\n\r\n        //if N > 60 and D < 2\r\n        let first_method = (\r\n            <>\r\n            <Form.Group className=\"row\">\r\n                <Form.Control className=\"m-2\"\r\n                        as=\"input\"\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        value={this.state.S_up}\r\n                        onChange={this.onChangeS_up}\r\n                        placeholder=\"S up (millimetres)\"\r\n                        data-toggle=\"tooltip\"\r\n                        title=\"the stair width for the upward portion of the stair\"\r\n                    />\r\n                <Form.Control className=\"m-2\"\r\n                        as=\"input\"\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        value={this.state.W_se}\r\n                        onChange={this.onChangeW_se}\r\n                        placeholder=\"W se (millimetres)\"\r\n                        data-toggle=\"tooltip\"\r\n                        title=\"the width of the final exit level storey exit\"\r\n                    />                \r\n            </Form.Group>\r\n            \r\n            </>\r\n        )\r\n\r\n        let second_method = (\r\n            <Form.Group className=\"row\">\r\n                <Form.Control className=\"m-2\"\r\n                    as=\"input\"\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={this.state.X}\r\n                    onChange={this.onChangeX}\r\n                    placeholder=\"X (millimetres)\"\r\n                    data-toggle=\"tooltip\"\r\n                    title=\"the minimum door width per person\"\r\n                />\r\n                <Form.Control className=\"m-2\"\r\n                    as=\"input\"\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={this.state.S_up}\r\n                    onChange={this.onChangeS_up}\r\n                    placeholder=\"S up (millimetres)\"\r\n                    data-toggle=\"tooltip\"\r\n                    title=\"the stair width for the upward portion of the stair\"\r\n                />                \r\n            </Form.Group>)\r\n\r\n\r\n        return (\r\n            <Form>\r\n                <div className=\"row justify-content-center\">\r\n                <Form.Group className=\"N-and-D-row row w-50\">\r\n                    <Form.Control className=\"col-md m-2\"\r\n                        as=\"input\"\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        value={this.state.N}\r\n                        onChange={this.onChangeN}\r\n                        placeholder=\"N (persons)\"\r\n                        data-toggle=\"tooltip\"\r\n                        title=\"Number of people served by the final exit level storey exit\"\r\n                    />\r\n                    <Form.Control className=\"col-md m-2\"\r\n                        as=\"input\"\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        value={this.state.D}\r\n                        onChange={this.onChangeD}\r\n                        placeholder=\"D (m)\"\r\n                        data-toggle=\"tooltip\"                            \r\n                        title=\"the lesser distance from the final exit level storey to the lowest riser from the upward portion of the stair\"\r\n                    />                                                        \r\n                </Form.Group>            \r\n                </div> \r\n                <div className=\"row justify-content-center\">\r\n                {(this.state.N > 60 && this.state.D < 2) ? first_method : second_method}\r\n                </div>\r\n                <hr/>\r\n                <div className=\"row justify-content-center\">\r\n                    <Form.Group className=\"row\">\r\n                        <Form.Label>Width of Final Exit (m)</Form.Label>\r\n                        <Form.Control\r\n                            as=\"label\"\r\n                        >   \r\n                            {this.calculate()}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </div>\r\n            </Form> \r\n\r\n        );\r\n    }\r\n\r\n    Scenario2Form(){\r\n\r\n        //if B > 60 and D < 2\r\n        let first_method = (\r\n            <>\r\n            <Form.Group className=\"row\">\r\n                <Form.Control className=\"m-2\"\r\n                        as=\"input\"\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        value={this.state.S_up}\r\n                        onChange={this.onChangeS_up}\r\n                        placeholder=\"S up (millimetres)\"\r\n                        data-toggle=\"tooltip\"\r\n                        title=\"the stair width for the upward portion of the stair\"\r\n                    />\r\n                <Form.Control className=\"m-2\"\r\n                        as=\"input\"\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        value={this.state.S_dn}\r\n                        onChange={this.onChangeS_dn}\r\n                        placeholder=\"S dn (millimetres)\"\r\n                        data-toggle=\"tooltip\"\r\n                        title=\"the stair width for the downward portion of the stair\"\r\n                    />                \r\n            </Form.Group>\r\n            \r\n            </>\r\n        )\r\n\r\n        let second_method = (\r\n            <Form.Group className=\"row\">\r\n                <Form.Control className=\"m-2\"\r\n                    as=\"input\"\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={this.state.S_up}\r\n                    onChange={this.onChangeS_up}\r\n                    placeholder=\"S up (millimetres)\"\r\n                    data-toggle=\"tooltip\"\r\n                    title=\"the stair width for the upward portion of the stair\"\r\n                />     \r\n                <Form.Control className=\"m-2\"\r\n                    as=\"input\"\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={this.state.X}\r\n                    onChange={this.onChangeX}\r\n                    placeholder=\"X (millimetres)\"\r\n                    data-toggle=\"tooltip\"\r\n                    title=\"the minimum door width per person\"\r\n                />                           \r\n            </Form.Group>)\r\n\r\n\r\n        return (\r\n            <Form>\r\n                <div className=\"row justify-content-center\">\r\n                <Form.Group className=\"N-and-D-row row w-50\">\r\n                    <Form.Control className=\"col-md m-2\"\r\n                        as=\"input\"\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        value={this.state.B}\r\n                        onChange={this.onChangeB}\r\n                        placeholder=\"B (persons)\"\r\n                        data-toggle=\"tooltip\"\r\n                        title=\"Number of people served by the stair from below the final exit level\"\r\n                    />\r\n                    <Form.Control className=\"col-md m-2\"\r\n                        as=\"input\"\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        value={this.state.D}\r\n                        onChange={this.onChangeD}\r\n                        placeholder=\"D (m)\"\r\n                        data-toggle=\"tooltip\"                            \r\n                        title=\"the lesser distance from the final exit level storey to the lowest riser from the upward portion of the stair\"\r\n                    />                                                        \r\n                </Form.Group>            \r\n                </div> \r\n                <div className=\"row justify-content-center\">\r\n                {(this.state.B > 60 && this.state.D < 2) ? first_method : second_method}\r\n                </div>\r\n                <hr/>\r\n                <h3>Results</h3>\r\n                <label className=\"input-group form-control\">\r\n                    {this.calculate()}\r\n                </label>\r\n            </Form> \r\n\r\n        );\r\n    }\r\n\r\n    Scenario3Form(){\r\n\r\n        //if B > 60 and D < 2\r\n        let first_method = (\r\n            <>\r\n            <Form.Group className=\"row\">\r\n                <Form.Control className=\"m-2\"\r\n                        as=\"input\"\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        value={this.state.S_up}\r\n                        onChange={this.onChangeS_up}\r\n                        placeholder=\"S up (millimetres)\"\r\n                        data-toggle=\"tooltip\"\r\n                        title=\"the stair width for the upward portion of the stair\"\r\n                    />\r\n                <Form.Control className=\"m-2\"\r\n                        as=\"input\"\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        value={this.state.S_dn}\r\n                        onChange={this.onChangeS_dn}\r\n                        placeholder=\"S dn (millimetres)\"\r\n                        data-toggle=\"tooltip\"\r\n                        title=\"the stair width for the downward portion of the stair\"\r\n                    />\r\n                <Form.Control className=\"m-2\"\r\n                    as=\"input\"\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={this.state.W_se}\r\n                    onChange={this.onChangeW_se}\r\n                    placeholder=\"W se (millimetres)\"\r\n                    data-toggle=\"tooltip\"\r\n                    title=\"the width of the final exit level storey exit\"\r\n                />                \r\n            </Form.Group>\r\n            \r\n            </>\r\n        )\r\n\r\n        let second_method = (\r\n            <Form.Group className=\"row\">\r\n                <Form.Control className=\"m-2\"\r\n                    as=\"input\"\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={this.state.S_up}\r\n                    onChange={this.onChangeS_up}\r\n                    placeholder=\"S up (millimetres)\"\r\n                    data-toggle=\"tooltip\"\r\n                    title=\"the stair width for the upward portion of the stair\"\r\n                />     \r\n                <Form.Control className=\"m-2\"\r\n                    as=\"input\"\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={this.state.X}\r\n                    onChange={this.onChangeX}\r\n                    placeholder=\"X (millimetres)\"\r\n                    data-toggle=\"tooltip\"\r\n                    title=\"the minimum door width per person\"\r\n                />                           \r\n            </Form.Group>)\r\n\r\n\r\n        return (\r\n            <Form>\r\n                <div className=\"row justify-content-center\">\r\n                <Form.Group className=\"N-and-D-row row w-75\">\r\n                    <Form.Control className=\"col-md m-2\"\r\n                        as=\"input\"\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        value={this.state.N}\r\n                        onChange={this.onChangeN}\r\n                        placeholder=\"N (persons)\"\r\n                        data-toggle=\"tooltip\"\r\n                        title=\"the number of people served by the final exit level storey exit\"\r\n                    />\r\n                    <Form.Control className=\"col-md m-2\"\r\n                        as=\"input\"\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        value={this.state.B}\r\n                        onChange={this.onChangeB}\r\n                        placeholder=\"B (persons)\"\r\n                        data-toggle=\"tooltip\"\r\n                        title=\"Number of people served by the stair from below the final exit level\"\r\n                    />\r\n                    <Form.Control className=\"col-md m-2\"\r\n                        as=\"input\"\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        value={this.state.D}\r\n                        onChange={this.onChangeD}\r\n                        placeholder=\"D (m)\"\r\n                        data-toggle=\"tooltip\"                            \r\n                        title=\"the lesser distance from the final exit level storey to the lowest riser from the upward portion of the stair\"\r\n                    />                                                        \r\n                </Form.Group>            \r\n                </div> \r\n                <div className=\"row justify-content-center\">\r\n                {(Number(this.state.B) + Number(this.state.N) > 60 && this.state.D < 2) ? first_method : second_method}\r\n                </div >\r\n                <hr/>\r\n                <h3>Results</h3>\r\n                <label className=\"input-group form-control\">\r\n                    {this.calculate()}\r\n                </label>\r\n            </Form> \r\n\r\n        );\r\n    }    \r\n\r\n\r\n    renderForm(){\r\n        //form to render depends on the scenario we have so we use another switch statement here that changes depending on the current state.scenario\r\n        switch(this.state.scenario){\r\n            case \"1\":\r\n                return this.Scenario1Form();\r\n            case \"2\":\r\n                return this.Scenario2Form();\r\n            case \"3\":\r\n                return this.Scenario3Form();\r\n            default:\r\n                return (\r\n                    <div>Unrecognised Scenario</div>\r\n                )\r\n        }\r\n    }\r\n\r\n\r\n    renderBody(){\r\n        return (\r\n            <div className=\"container mx-auto\">\r\n                <Form  className=\"mx-auto\">\r\n                    <Form.Group>\r\n                        <Form.Label className=\"mx-auto\">\r\n                            Scenario:\r\n                        </Form.Label>\r\n                        <div className=\"radio-buttons-row row justify-content-center\">\r\n                                <Form.Check className=\"px-3\"\r\n                                    as={Form.Input}\r\n                                    checked={this.state.scenario===\"1\"}\r\n                                    value=\"1\"\r\n                                    onChange={this.onChooseScenario}\r\n                                    type=\"radio\"\r\n                                    label=\"1\"\r\n                                    id=\"scenario_1\"\r\n                                    name=\"scenario_radio_buttons\"\r\n                                />\r\n                                <Form.Check className=\"px-3\"\r\n                                    as={Form.Input}\r\n                                    checked={this.state.scenario===\"2\"}\r\n                                    value=\"2\"\r\n                                    onChange={this.onChooseScenario}\r\n                                    type=\"radio\"\r\n                                    label=\"2\"\r\n                                    name=\"scenario_radio_buttons\"\r\n                                    id=\"scenario_2\"\r\n                                />\r\n                                <Form.Check className=\"px-3\"\r\n                                    as={Form.Input}\r\n                                    checked={this.state.scenario===\"3\"}\r\n                                    value=\"3\"\r\n                                    onChange={this.onChooseScenario}\r\n                                    type=\"radio\"\r\n                                    label=\"3\"\r\n                                    name=\"scenario_radio_buttons\"\r\n                                    id=\"scenario_3\"\r\n                                />\r\n                        </div>\r\n                    </Form.Group>\r\n                </Form>\r\n                <div className=\"row mx-auto\">\r\n                    <img className=\"mx-auto\" \r\n                        src={this.getDiagram()}\r\n                        alt={\"Scenario \" + this.state.scenario + \" diagram\"}\r\n                        />\r\n                </div>\r\n                <div className=\"scenario-descriptor row justify-content-center py-3\">\r\n                    {this.scenarioDescriptors[this.state.scenario]}\r\n                </div>\r\n                <div className=\"Input-form\">\r\n                    {this.renderForm()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport ofrify from \"./../utils/dateutils\"\r\nimport Module from './module.component';\r\n\r\nexport default class FileNameConvention extends Module{\r\n    constructor(props){\r\n        super(props);\r\n        this.onChangeDate = this.onChangeDate.bind(this);\r\n        this.onChangeRevision = this.onChangeRevision.bind(this);\r\n        this.onChangeProject = this.onChangeProject.bind(this);\r\n        this.onChangeStage = this.onChangeStage.bind(this);\r\n        this.onChangeTitle = this.onChangeTitle.bind(this);\r\n        this.onChangeType = this.onChangeType.bind(this);\r\n        this.onChangeSecurityStatus = this.onChangeSecurityStatus.bind(this);\r\n        this.copyToClipboard = this.copyToClipboard.bind(this);\r\n        this.title = 'File Naming Convention'\r\n        this.state = this.resetState();\r\n    }\r\n\r\n    resetState(){\r\n        return{\r\n            date: new Date(),\r\n            revision: \"Q00\",\r\n            project: \"MAXXXXX\",\r\n            stage: \"WP1\",\r\n            title: \"Detailed Fire Strategy\",\r\n            type: \"GA\",\r\n            securityStatus: \"CIC\"\r\n        }\r\n    }\r\n\r\n    async onSubmit(e) {\r\n        e.preventDefault();\r\n        this.copyToClipboard();\r\n        return false\r\n      }\r\n\r\n    onChangeDate(e){\r\n        this.setState({\r\n            date: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeRevision(e){\r\n        this.setState({\r\n            revision: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeProject(e){\r\n        this.setState({\r\n            project: e.target.value\r\n        });\r\n    }\r\n    onChangeStage(e){\r\n        this.setState({\r\n            stage: e.target.value\r\n        });\r\n    }\r\n    onChangeTitle(e){\r\n        this.setState({\r\n            title: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeType(e){\r\n        this.setState({\r\n            type: e.target.value\r\n        });\r\n    }\r\n    onChangeSecurityStatus(e){\r\n        this.setState({\r\n            securityStatus: e.target.value\r\n        });\r\n    }\r\n    createFilename(){\r\n        let filename = [];\r\n        \r\n        //this is a bit of a messy way to do it, but looping through doesn't work \r\n        //as some values are stored differently than how they should appear in the filename\r\n        //it's important that states are stored as the exact value the html expects\r\n\r\n        filename.push(ofrify(this.state.date));\r\n        filename.push(this.state.revision.split(':')[0]);\r\n        filename.push(this.state.project);\r\n        filename.push(this.state.stage);\r\n        filename.push(this.state.title);\r\n        filename.push(this.state.type.split(':')[0]);\r\n        filename.push(this.state.securityStatus.split(':')[0]);\r\n        filename = filename.join('-');\r\n        return filename;\r\n    }\r\n\r\n    copyToClipboard(){\r\n        var copyText = this.createFilename();\r\n        navigator.clipboard.writeText(copyText).then(()=>alert(\"Copied: \" + copyText));\r\n    }\r\n\r\n    renderBody(){\r\n        return(\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.onSubmit.bind(this)} autoComplete=\"off\">\r\n                        <div className=\"form-row\">\r\n                            <label className=\"col-md-2\">Date</label>\r\n                            <input \r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                value={this.state.date}\r\n                                onChange={this.onChangeDate}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <label className=\"col-md-2\">Revsion</label>\r\n                            <select className=\"form-control\" value={this.state.revision} onChange={this.onChangeRevision}>\r\n                                <option>Q00: First issue for internal review</option>\r\n                                <option>Q01: Reviewer's Comments</option>\r\n                                <option>Q02: Authoriser's Comments</option>\r\n                                <option>D00: First issue to Others for Comment</option>\r\n                                <option>D01: Subsequent external Reviews</option>\r\n                                <option>R00: First Issue</option>\r\n                                <option>R01: Second Issue</option>\r\n                            </select>\r\n\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <label className=\"col-md-2\">Project Number</label>\r\n                            <input \r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                value={this.state.project}\r\n                                onChange={this.onChangeProject}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <label className=\"col-md-2\">Project Stage</label>\r\n                                <input \r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    value={this.state.stage}\r\n                                    onChange={this.onChangeStage}\r\n                                />\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <label className=\"col-md-2\">File Title</label>\r\n                                <input \r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    value={this.state.title}\r\n                                    onChange={this.onChangeTitle}\r\n                                />\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <label className=\"col-md-2\">Document Type</label>\r\n                                <select className=\"form-control\" value={this.state.type} onChange={this.onChangeType}>\r\n                                    <option>GA: General Admin</option>\r\n                                    <option>MD: Marketing</option>\r\n                                    <option>FP: Fee Proposal</option>\r\n                                    <option>LT: Letter</option>\r\n                                    <option>DN: Design Note</option>\r\n                                    <option>OF: Outline Strategy</option>\r\n                                    <option>DF: Detailed Strategy</option>\r\n                                    <option>RF: Retrospective Strategy</option>\r\n                                    <option>FA: Fire Risk Assessment</option>\r\n                                    <option>FS: Fire Survey Report</option>\r\n                                    <option>FN: File Note</option>\r\n                                    <option>MN: Meeting Notes</option>\r\n                                    <option>CS: Calculation Sheet</option>\r\n                                    <option>SK: Sketch</option>\r\n                                    <option>DW: Drawing</option>\r\n                                    <option>XO: Expert Opinion</option>\r\n                                </select>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <label className=\"col-md-2\">Security Status</label>\r\n                                <select className=\"form-control\" value={this.state.securityStatus} onChange={this.onChangeSecurityStatus}>\r\n                                    <option>CIC: Commercial in Confidence</option>\r\n                                    <option>WPC: Without Prejudice and Confidential</option>\r\n                                    <option>SDS: Secure Document</option>\r\n                                    <option>FID: Free Issue Document (no security status)</option>                                    \r\n                                </select>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"form-row\">\r\n                            <label className=\"col-md-2\">Filename:</label>\r\n                            <div className=\"input-group col-md-10\">\r\n                            <label className=\"input-group form-control\" id=\"filename\">{this.createFilename()}</label>\r\n                            <div class=\"input-group-append\">\r\n                                <input class=\"btn btn-primary\" type=\"submit\" value=\"Copy\"/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n        );\r\n    }\r\n}","export default function ofrify(date){\r\n    let isodate = date;\r\n    if (typeof date !== \"string\"){\r\n        isodate = date.toISOString();\r\n        isodate = isodate.split(\"T\")[0]; //remove everything after the time character\r\n    }\r\n    isodate = isodate.substr(2); //chop off first two characters\r\n    isodate = isodate.split(\"-\"); //chop up into year, month, day\r\n    isodate = isodate[0]+isodate[1]+isodate[2]; //add together year+month+day\r\n    return isodate\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport Module from './module.component';\r\n\r\nexport default class Features extends Module{\r\n    constructor(props){\r\n        super(props);\r\n        this.title=\"Features\"\r\n        this.footer=\"I'm trying my best y'all but it takes time!\"\r\n        //Features are stored in two arrays. one for implemented features and one for non-implemented features that you wish to implement.\r\n        //Each feature is an array. The first entry corresponds to the user-friendly name of the feature. The second entry refers to the url linking to that feature.\r\n        this.features = {\r\n            implemented: [\r\n                [\"BR187\", \"/BR187\"],\r\n                [\"File naming Convention\", \"/File Naming\"],\r\n                [\"Merging Flow\", \"/Merging Flow\"]\r\n            ],\r\n            intended: [\r\n                \"Flame Height\",\r\n                \"Sprinkler Activation Time\",\r\n                \"Datasheets\"\r\n            ]\r\n        }\r\n    }\r\n\r\n    renderBody() {\r\n        var currentFeatures = [];\r\n        this.features.implemented.forEach(\r\n            function(item, index) {currentFeatures.push(<a className=\"list-group-item list-group-item-action\" href={\"#\" + item[1]}>{item[0]}</a>)}\r\n        );\r\n        var intendedFeatures = [];\r\n        this.features.intended.forEach(\r\n            function(item, index) {intendedFeatures.push(<div className=\"list-group-item\">{item}</div>)}\r\n        );\r\n        return (\r\n            <div>\r\n            <h2>Current Features</h2>\r\n            <div className=\"list-group\">\r\n                {currentFeatures}\r\n            </div>\r\n            <hr/>\r\n            <h2>Intended Features</h2>\r\n            <div className=\"list-group\">\r\n                {intendedFeatures}\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Module from './module.component';\r\n\r\nexport default class References extends Module{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.title = \"References\";\r\n        this.footer= \"Alex Todd | OFR Consultants Ltd.\"\r\n    }\r\n\r\n    renderBody(){\r\n        return (\r\n            <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">\r\n                    BSI, BS 9991:2015 Fire safety in the design, management and use of residential buildings - Code of practice, London: British Standards Institute, 2015. \r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    BSI, BS 9999:2017 Fire safety in the design, management and use of buildings - Code of practice, London: British Standards Institute, 2017.\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    HM Government, The Building Regulations 2010 Fire safety Approved Document B 2019 edition, 2019. \r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    BRE, BR 187 External fire spread - Building separation and boundary distances, IHS BRE Press, Bracknell, 2014. \r\n                </li>\r\n            </ul>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Route, Link, HashRouter as Router } from 'react-router-dom'\r\nimport {Nav, Navbar, NavDropdown, Form, FormControl, Button} from 'react-bootstrap'\r\n\r\nimport logo from './img/logo-light.png';\r\nimport './App.scss';\r\nimport BR187 from './components/br187.component.js'\r\nimport Home from './components/home.component.js'\r\nimport About from './components/about.component.js'\r\nimport MergingFlow from './components/mergingflow.component'\r\nimport FileNameConvention from './components/filename.component';\r\nimport Features from './components/features.component';\r\nimport References from './components/references.component';\r\n\r\nclass App extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.modules = {}\r\n    this.setModules()\r\n  };\r\n\r\n  //each modules is an array consisting of a class and a name (string)\r\n  setModules(){\r\n    this.modules= {\r\n      home: [Home, \"Home\"],\r\n      filenaming: [FileNameConvention, \"File Naming\"],\r\n      br187: [BR187, \"BR187\"],\r\n      mergingflow: [MergingFlow, \"Merging Flow\"],\r\n      features: [Features, \"Features\"],\r\n      about: [About, \"About\"],\r\n      references: [References, \"References\"]\r\n    }\r\n  }\r\n\r\n  navbar(){\r\n    return (\r\n    <Navbar variant=\"dark\" className=\"navbar shadow-lg\" expand=\"md\" sticky=\"top\">\r\n      <Navbar.Brand as={Link} to=\"/Home\">\r\n        <img\r\n          src={logo}\r\n          height=\"40rem\"\r\n          alt=\"OFR Consultants\"\r\n        />\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link as={Link} to=\"/Home\">Home</Nav.Link>\r\n          <Nav.Link as={Link} to=\"/Features\">Features</Nav.Link>\r\n          <NavDropdown title=\"Modules\" id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Header>Implemented</NavDropdown.Header>\r\n            <NavDropdown.Item as={Link} to=\"/File Naming\">File Naming</NavDropdown.Item>\r\n            <NavDropdown.Item as={Link} to=\"/BR187\">BR187</NavDropdown.Item>\r\n            <NavDropdown.Item as={Link} to=\"/Merging Flow\">Merging Flow</NavDropdown.Item>\r\n            <NavDropdown.Divider/>\r\n            <NavDropdown.Header>Coming Soon</NavDropdown.Header>\r\n          </NavDropdown>\r\n        </Nav>\r\n        <Nav>\r\n          <Nav.Link as={Link} to=\"/About\">About</Nav.Link>\r\n          <Nav.Link as={Link} to=\"/References\" className=\"mr-sm-2\">References</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>)\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    let routes = [];\r\n    for (let key in this.modules){\r\n      let item = this.modules[key];\r\n      routes.push(<Route path={\"/\"+item[1]} component={item[0]} />);\r\n    }\r\n      \r\n    return (\r\n      <div className=\"root\">\r\n        <Router>\r\n          <div>\r\n            {this.navbar()}\r\n            <div className=\"container module-container mt-5 mx-auto\">\r\n                <Route exact path=\"/\" component={Home}/>\r\n                {routes}                            \r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n  );\r\n};\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}